evaluationDependsOn(':Common')

group = "${APEX_GROUP}.${TEST_MOD_ID}.shared"
version = "${TEST_MOD_VERSION}+${MINECRAFT_VERSION}"
archivesBaseName = "${TEST_MOD_ID}-shared"

sourceSets {
	main {
		resources.srcDirs += 'src/main/generated'
	}
}

architectury {
	common(['forge', 'fabric', 'quilt'])
}

loom {
	mods {
		"${MOD_ID}" {
			sourceSet project(':Common').sourceSets.main
		}
	}
}

repositories {
	maven { url "file:///${rootProject.projectDir}/maven" }
	maven { url 'https://maven.parchmentmc.org' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
	maven { url 'https://dvs1.progwml6.com/files/maven/' }
	maven { url 'https://modmaven.dev/' }
	maven { url 'https://maven.covers1624.net/' }

	maven {
		url 'https://www.cursemaven.com'
		content { includeGroup 'curse.maven' }
	}

	maven {
		url 'https://api.modrinth.com/maven'
		content { includeGroup 'maven.modrinth' }
	}
}

dependencies {
	compileOnly "org.spongepowered:mixin:${MIXIN_VERSION}"
	modApi "dev.architectury:architectury:${ARCHITECTURY_VERSION}"
	implementation(project(path: ':Common', configuration: 'namedElements')) { transitive false }
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'com.google.errorprone:error_prone_annotations:2.11.0'
}

processResources {
	project.properties.each { key, value ->
		inputs.property "${key}", "${value}"
	}

	filesMatching([ '*.mixins.json', 'pack.mcmeta' ]) {
		expand project.properties
	}
}

apply from: rootProject.file('scripts/fabric.gradle')

loom {
    runs {
        client {
            client()
            ideConfigGenerated true

            vmArg '-XX:+AllowEnhancedClassRedefinition'
            vmArg '-XX:+IgnoreUnrecognizedVMOptions'
            vmArg '-XX:+AllowRedefinitionToAddDeleteMethods'
        }

        server {
            server()
            ideConfigGenerated true

            vmArg '-XX:+AllowEnhancedClassRedefinition'
            vmArg '-XX:+IgnoreUnrecognizedVMOptions'
            vmArg '-XX:+AllowRedefinitionToAddDeleteMethods'
        }

        data {
            server()
            ideConfigGenerated true

            vmArg '-Dfabric-api.datagen'
            vmArg "-Dfabric-api.datagen.output-dir=${project(':testmod-common').file('src/generated/resources')}"
            vmArg '-Dfabric-api.datagen.modid=testmod'
            vmArg '-Dfabric-api.datagen.strict-validation'
        }
    }

    mods {
        main {
            sourceSet project(':testmod-common').sourceSets.main
            sourceSet sourceSets.main
        }

        "${MOD_ID}" {
            sourceSet project(':common').sourceSets.main
            sourceSet project(':fabric').sourceSets.main
        }
    }
}

dependencies {
    common(project(path: ':fabric', configuration: 'namedElements')) { transitive false }
    common(project(path: ':testmod-common', configuration: 'namedElements')) { transitive false }
    bundle(project(path: ':testmod-common', configuration: 'transformProductionFabric')) { transitive false }
}